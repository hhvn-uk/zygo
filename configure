#!/bin/sh

CC=${CC:-cc}

trap "rm -f test.c test" EXIT
echo "# Generated by configure" > config.mk

printf '%s' "checking for libtls... "
cat > test.c <<- EOF
	#include <tls.h>
	int main(void) { return 0; }
EOF
${CC} -ltls -o test test.c >/dev/null 2>/dev/null && {
	printf '%s\n' "yes"
	cat >> config.mk <<- EOF
		# libretls or libtls (standalone tls.h implementation) configuration
		LDFLAGS	+= -ltls
		SRC	+= tls.c
	EOF
} || {
	printf '%s\n' "no"
	cat >> config.mk <<- EOF
		# no TLS configured
		# install libretls or libtls (standalone tls.h implementation) for TLS
		SRC	+= plain.c
	EOF
}

printf '%s' "checking for libtinfow... "
cat > test.c <<- EOF
	#include <ncurses.h>
	int main(void) { return 0; }
EOF
${CC} -ltinfow -o test test.c >/dev/null 2>/dev/null && {
	printf '%s\n' "yes"
	hastinfow=1
} || {
	printf '%s\n' "no"
	hastinfow=0
}

[ $hastinfow -eq 1 ] && {
	printf '%s' "should link with libtinfow... "
	cat > test.c <<- EOF
		#include <ncurses.h>
		int main(void) { initscr(); endwin(); return 0; }
	EOF
	${CC} -ltinfow -o test test.c >/dev/null 2>/dev/null && ./test >/dev/null 2>/dev/null && {
		printf '%s\n' "yes"
		cat >> config.mk <<- EOF
			# linking with tinfow
			# on some systems both ncursesw and tinfow must be linked
			# otherwise, thank ncurses for the nondescript segfault in initscr()...
			LDFLAGS += -ltinfow
		EOF
	} || printf '%s\n' "no"
}

printf '%s' "checking for strlcat... "
cat > test.c <<- EOF
	#include <string.h>
	int main(void) { char a[3] = {'a', 0, 0}; strlcat(a, "hello", sizeof(a)); return 0; }
EOF
${CC} -o test test.c >/dev/null 2>/dev/null && ./test >/dev/null 2>/dev/null && {
	printf '%s\n' "yes"
} || {
	printf '%s\n' "no"
	cat >> config.mk <<- EOF
		# linking an included version of strlcat, as your system doesn't have it
		CFLAGS	+= -DZYGO_STRLCAT
		SRC	+= strlcat.c
	EOF
}
